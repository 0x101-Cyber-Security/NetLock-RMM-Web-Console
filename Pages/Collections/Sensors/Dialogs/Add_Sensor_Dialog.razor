@using MySqlConnector;
@using System.Data.Common;
@using System.Text.Json;

@inject NavigationManager NavigationManager
@inject ILocalStorageService localStorage
@inject IDialogService DialogService
@inject ISnackbar Snackbar
@inject IJSRuntime JSRuntime

<MudDialog Style="width: 600px;">
    <TitleContent>
        <MudText Typo="Typo.h5">Sensor hinzufügen</MudText>
    </TitleContent>
    <DialogContent>

        <MudTextField Label="Name" T="string" @bind-Value="@sensor_name" Required="true" RequiredError="Erforderlich" Immediate="@true" />
        <MudTextField Label="Beschreibung" T="string" @bind-Value="@description" Required="true" RequiredError="Erforderlich" Immediate="@true" />

        <MudSelect Class="mt-3" T="string" @bind-Value="severity" Label="Priorität" AnchorOrigin="Origin.BottomCenter">
            <MudSelectItem Value="@("Kritisch")" />
            <MudSelectItem Value="@("Hoch")" />
            <MudSelectItem Value="@("Moderat")" />
            <MudSelectItem Value="@("Niedrig")" />
        </MudSelect>

        <MudSelect Class="mt-3" T="string" @bind-Value="time_scheduler_type" Label="Zeitplan" AnchorOrigin="Origin.BottomCenter">
            <MudSelectItem Value="@("Systemstart")" />
            <MudSelectItem Value="@("Datum & Uhrzeit")" />
            <MudSelectItem Value="@("Alle X Sekunden")" />
            <MudSelectItem Value="@("Alle X Minuten")" />
            <MudSelectItem Value="@("Alle X Stunden")" />
            <MudSelectItem Value="@("Datum, alle X Sekunden")" />
            <MudSelectItem Value="@("Datum, alle X Minuten")" />
            <MudSelectItem Value="@("Datum, alle X Stunden")" />
            <MudSelectItem Value="@("An den folgenden Tagen um X Uhr")" />
            <MudSelectItem Value="@("An den folgenden Tagen, alle X Sekunden")" />
            <MudSelectItem Value="@("An den folgenden Tagen, alle X Minuten")" />
            <MudSelectItem Value="@("An den folgenden Tagen, alle X Stunden")" />
        </MudSelect>

        @{
            if (time_scheduler_type == "Datum & Uhrzeit")
            {
                <div style="display: flex; align-items: center;">
                    <MudDatePicker PickerVariant="PickerVariant.Dialog" Label="Datum" DateFormat="dd/MM/yyyy" @bind-Date="time_scheduler_date" />

                    <MudTimePicker Class="ml-2" Label="Uhrzeit" @bind-Time="time_scheduler_time" />
                </div>
            }
            else if (time_scheduler_type == "Alle X Sekunden")
            {
                <MudNumericField Class="mt-3" @bind-Value="time_scheduler_seconds" Label="Sekunden" Variant="Variant.Text" Min="1" Max="9999" />
            }
            else if (time_scheduler_type == "Alle X Minuten")
            {
                <MudNumericField Class="mt-3" @bind-Value="time_scheduler_minutes" Label="Minuten" Variant="Variant.Text" Min="1" Max="9999" />
            }
            else if (time_scheduler_type == "Alle X Stunden")
            {
                <MudNumericField Class="mt-3" @bind-Value="time_scheduler_hours" Label="Stunden" Variant="Variant.Text" Min="1" Max="9999" />
            }
            else if (time_scheduler_type == "Datum, alle X Sekunden")
            {
                <div style="display: flex; align-items: center;">
                    <MudDatePicker PickerVariant="PickerVariant.Dialog" Label="Datum" DateFormat="dd/MM/yyyy" @bind-Date="time_scheduler_date" />

                    <MudNumericField Class="ml-2" @bind-Value="time_scheduler_seconds" Label="Sekunden" Variant="Variant.Text" Min="1" Max="9999" />
                </div>
            }
            else if (time_scheduler_type == "Datum, alle X Minuten")
            {
                <div style="display: flex; align-items: center;">
                    <MudDatePicker PickerVariant="PickerVariant.Dialog" Label="Datum" DateFormat="dd/MM/yyyy" @bind-Date="time_scheduler_date" />

                    <MudNumericField Class="ml-2" @bind-Value="time_scheduler_minutes" Label="Minuten" Variant="Variant.Text" Min="1" Max="9999" />
                </div>
            }
            else if (time_scheduler_type == "Datum, alle X Stunden")
            {
                <div style="display: flex; align-items: center;">
                    <MudDatePicker PickerVariant="PickerVariant.Dialog" Label="Datum" DateFormat="dd/MM/yyyy" @bind-Date="time_scheduler_date" />

                    <MudNumericField Class="ml-2" @bind-Value="time_scheduler_hours" Label="Stunden" Variant="Variant.Text" Min="1" Max="9999" />
                </div>
            }
            else if (time_scheduler_type == "An den folgenden Tagen um X Uhr")
            {
                <MudTimePicker Label="Uhrzeit" @bind-Time="time_scheduler_time" />

                <MudCheckBox T="bool" @bind-Value="time_scheduler_monday" Label="Montag" Color="Color.Primary" />
                <MudCheckBox T="bool" @bind-Value="time_scheduler_tuesday" Label="Dienstag" Color="Color.Primary" />
                <MudCheckBox T="bool" @bind-Value="time_scheduler_wednesday" Label="Mittwoch" Color="Color.Primary" />
                <MudCheckBox T="bool" @bind-Value="time_scheduler_thursday" Label="Donnerstag" Color="Color.Primary" />
                <MudCheckBox T="bool" @bind-Value="time_scheduler_friday" Label="Freitag" Color="Color.Primary" />
                <MudCheckBox T="bool" @bind-Value="time_scheduler_saturday" Label="Samstag" Color="Color.Primary" />
                <MudCheckBox T="bool" @bind-Value="time_scheduler_sunday" Label="Sonntag" Color="Color.Primary" />
            }
            else if (time_scheduler_type == "An den folgenden Tagen, alle X Sekunden")
            {
                <MudNumericField @bind-Value="time_scheduler_seconds" Label="Sekunden" Variant="Variant.Text" Min="1" Max="9999" />

                <MudCheckBox T="bool" @bind-Value="time_scheduler_monday" Label="Montag" Color="Color.Primary" />
                <MudCheckBox T="bool" @bind-Value="time_scheduler_tuesday" Label="Dienstag" Color="Color.Primary" />
                <MudCheckBox T="bool" @bind-Value="time_scheduler_wednesday" Label="Mittwoch" Color="Color.Primary" />
                <MudCheckBox T="bool" @bind-Value="time_scheduler_thursday" Label="Donnerstag" Color="Color.Primary" />
                <MudCheckBox T="bool" @bind-Value="time_scheduler_friday" Label="Freitag" Color="Color.Primary" />
                <MudCheckBox T="bool" @bind-Value="time_scheduler_saturday" Label="Samstag" Color="Color.Primary" />
                <MudCheckBox T="bool" @bind-Value="time_scheduler_sunday" Label="Sonntag" Color="Color.Primary" />
            }
            else if (time_scheduler_type == "An den folgenden Tagen, alle X Minuten")
            {
                <MudNumericField @bind-Value="time_scheduler_minutes" Label="Minuten" Variant="Variant.Text" Min="1" Max="9999" />

                <MudCheckBox T="bool" @bind-Value="time_scheduler_monday" Label="Montag" Color="Color.Primary" />
                <MudCheckBox T="bool" @bind-Value="time_scheduler_tuesday" Label="Dienstag" Color="Color.Primary" />
                <MudCheckBox T="bool" @bind-Value="time_scheduler_wednesday" Label="Mittwoch" Color="Color.Primary" />
                <MudCheckBox T="bool" @bind-Value="time_scheduler_thursday" Label="Donnerstag" Color="Color.Primary" />
                <MudCheckBox T="bool" @bind-Value="time_scheduler_friday" Label="Freitag" Color="Color.Primary" />
                <MudCheckBox T="bool" @bind-Value="time_scheduler_saturday" Label="Samstag" Color="Color.Primary" />
                <MudCheckBox T="bool" @bind-Value="time_scheduler_sunday" Label="Sonntag" Color="Color.Primary" />
            }
            else if (time_scheduler_type == "An den folgenden Tagen, alle X Stunden")
            {
                <MudNumericField @bind-Value="time_scheduler_hours" Label="Stunden" Variant="Variant.Text" Min="1" Max="9999" />

                <MudCheckBox T="bool" @bind-Value="time_scheduler_monday" Label="Montag" Color="Color.Primary" />
                <MudCheckBox T="bool" @bind-Value="time_scheduler_tuesday" Label="Dienstag" Color="Color.Primary" />
                <MudCheckBox T="bool" @bind-Value="time_scheduler_wednesday" Label="Mittwoch" Color="Color.Primary" />
                <MudCheckBox T="bool" @bind-Value="time_scheduler_thursday" Label="Donnerstag" Color="Color.Primary" />
                <MudCheckBox T="bool" @bind-Value="time_scheduler_friday" Label="Freitag" Color="Color.Primary" />
                <MudCheckBox T="bool" @bind-Value="time_scheduler_saturday" Label="Samstag" Color="Color.Primary" />
                <MudCheckBox T="bool" @bind-Value="time_scheduler_sunday" Label="Sonntag" Color="Color.Primary" />
            }

        }

        <MudSelect Class="mt-3" T="string" @bind-Value="category" Label="Kategorie" AnchorOrigin="Origin.BottomCenter">
            <MudSelectItem Value="@("Auslastung")" />
            <MudSelectItem Value="@("Windows Eventlog")" />
            <MudSelectItem Value="@("PowerShell")" />
            <MudSelectItem Value="@("Dienst")" />
            <MudSelectItem Value="@("Ping")" />
        </MudSelect>

        @{
            if (category == "Auslastung")
            {
                <MudSelect Class="mt-3" T="string" @bind-Value="sub_category" Label="Unterkategorie" AnchorOrigin="Origin.BottomCenter">
                    <MudSelectItem Value="@("Prozessor")" />
                    <MudSelectItem Value="@("Arbeitsspeicher")" />
                    <MudSelectItem Value="@("Laufwerk")" />
                </MudSelect>

                if (sub_category == "Prozessor")
                {
                    <MudText Class="mt-5" Typo="Typo.h6">Regel</MudText>

                    <MudSlider @bind-Value="cpu_usage" ValueLabel="true" Min="5" Step="5" Style="width: 97%;">Auslastung (%)</MudSlider>

                    <div style="display: flex; align-items: center;">
                        <MudNumericField Class="mt-3" @bind-Value="notification_treshold_max" Label="Benachrichtigung ab X Schwellenwert Überschreitungen." Variant="Variant.Text" Min="1" Max="9999" />

                        <MudTooltip Text="Wie viele Schwellenwert Überschreitungen erforderlich sind, bis eine Benachrichtung versendet wird.">
                            <MudIconButton Class="ml-2 mt-5" Icon="@Icons.Material.Filled.Info" Variant="Variant.Text" Size="Size.Small" Color="Color.Default"></MudIconButton>
                        </MudTooltip>
                    </div>

                    <MudText Class="mt-5" Typo="Typo.h6">Aktion</MudText>

                    <MudTextField Label="PowerShell Code" T="string" Lines="15" @bind-Value="@powershell_code" Variant="Variant.Outlined" Required="false" RequiredError="Erforderlich" Immediate="@true" />

                    <div style="display: flex; align-items: center;">
                        <MudNumericField Class="mt-3" @bind-Value="action_treshold_max" Label="Aktion ab X Schwellenwert Überschreitungen." Variant="Variant.Text" Min="1" Max="9999" />

                        <MudTooltip Text="Wie viele aufeinanderfolgende Schwellenwert Überschreitungen erforderlich sind, bis die PowerShell Code Aktion ausgeführt wird.">
                            <MudIconButton Class="ml-2 mt-5" Icon="@Icons.Material.Filled.Info" Variant="Variant.Text" Size="Size.Small" Color="Color.Default"></MudIconButton>
                        </MudTooltip>
                    </div>
                }
                else if (sub_category == "Arbeitsspeicher")
                {
                    <MudText Class="mt-5" Typo="Typo.h6">Regel</MudText>

                    <MudSlider @bind-Value="ram_usage" ValueLabel="true" Min="5" Step="5" Style="width: 97%;">Auslastung (%)</MudSlider>

                    <div style="display: flex; align-items: center;">
                        <MudNumericField Class="mt-3" @bind-Value="notification_treshold_max" Label="Benachrichtigung ab X Schwellenwert Überschreitungen." Variant="Variant.Text" Min="1" Max="9999" />

                        <MudTooltip Text="Wie viele Schwellenwert Überschreitungen erforderlich sind, bis eine Benachrichtung versendet wird.">
                            <MudIconButton Class="ml-2 mt-5" Icon="@Icons.Material.Filled.Info" Variant="Variant.Text" Size="Size.Small" Color="Color.Default"></MudIconButton>
                        </MudTooltip>
                    </div>

                    <MudText Class="mt-5" Typo="Typo.h6">Aktion</MudText>

                    <MudTextField Label="PowerShell Code" T="string" Lines="15" @bind-Value="@powershell_code" Variant="Variant.Outlined" Required="false" RequiredError="Erforderlich" Immediate="@true" />

                    <div style="display: flex; align-items: center;">
                        <MudNumericField Class="mt-3" @bind-Value="action_treshold_max" Label="Aktion ab X Schwellenwert Überschreitungen." Variant="Variant.Text" Min="1" Max="9999" />

                        <MudTooltip Text="Wie viele aufeinanderfolgende Schwellenwert Überschreitungen erforderlich sind, bis die PowerShell Code Aktion ausgeführt wird.">
                            <MudIconButton Class="ml-2 mt-5" Icon="@Icons.Material.Filled.Info" Variant="Variant.Text" Size="Size.Small" Color="Color.Default"></MudIconButton>
                        </MudTooltip>
                    </div>
                }
                else if (sub_category == "Laufwerk")
                {
                    <MudSelect Class="mt-3" T="string" @bind-Value="disk_category" Label="Wenn..." AnchorOrigin="Origin.BottomCenter">
                        <MudSelectItem Value="@("Mehr als X GB belegt")" />
                        <MudSelectItem Value="@("Weniger als X GB frei")" />
                        <MudSelectItem Value="@("Mehr als X Prozent belegt")" />
                        <MudSelectItem Value="@("Weniger als X Prozent frei")" />
                    </MudSelect>

                    if (!String.IsNullOrEmpty(disk_category))
                    {
                        <MudText Class="mt-5" Typo="Typo.h6">Regel</MudText>

                        <div style="display: flex; align-items: center;">
                            <MudTextField Label="Laufwerk Buchstaben" T="string" @bind-Value="@disk_letters" Variant="Variant.Text" Required="false" RequiredError="Erforderlich" Immediate="@true" />

                            <MudTooltip Text="Buchstaben werden durch Komma getrennt. Zum Beispiel: C,D,G Wird kein Buchstabe angegeben, werden alle Laufwerke überprüft.">
                                <MudIconButton Class="ml-2 mt-5" Icon="@Icons.Material.Filled.Info" Variant="Variant.Text" Size="Size.Small" Color="Color.Default"></MudIconButton>
                            </MudTooltip>
                        </div>

                        <div style="display: flex; align-items: center;">
                            <MudNumericField Class="mt-3" @bind-Value="disk_minimum_capacity" Label="Nur Laufwerke ab einer Kapazität von X Gigabyte prüfen." Variant="Variant.Text" Min="0" Max="9999" />

                            <MudTooltip Text="Bestimmt wie viel Kapazität ein Laufwerk (Partition) mindestens haben muss, damit es überwacht wird. 0 = egal.">
                                <MudIconButton Class="ml-2 mt-5" Icon="@Icons.Material.Filled.Info" Variant="Variant.Text" Size="Size.Small" Color="Color.Default"></MudIconButton>
                            </MudTooltip>
                        </div>

                        if (disk_category == "Mehr als X GB belegt")
                        {
                            <MudNumericField Class="mt-3" @bind-Value="disk_usage" Label="Auslösen wenn folgender Schwellwert (GB) überschritten wird." Variant="Variant.Text" Min="1" Max="9999" />
                        }
                        else if (disk_category == "Weniger als X GB frei")
                        {
                            <MudNumericField Class="mt-3" @bind-Value="disk_usage" Label="Auslösen wenn folgender Schwellwert (GB) überschritten wird." Variant="Variant.Text" Min="1" Max="9999" />
                        }
                        if (disk_category == "Mehr als X Prozent belegt")
                        {
                            <MudSlider @bind-Value="disk_usage" ValueLabel="true" Min="5" Step="5" Style="width: 97%;">Auslösen wenn folgender Schwellwert (Prozenzt) überschritten wird.</MudSlider>
                        }
                        else if (disk_category == "Weniger als X Prozent frei")
                        {
                            <MudSlider @bind-Value="disk_usage" ValueLabel="true" Min="5" Step="5" Style="width: 97%;">Auslösen wenn folgender Schwellwert (Prozenzt) überschritten wird.</MudSlider>
                        }

                        <div style="display: flex; align-items: center;">
                            <MudCheckBox T="bool" @bind-Value="@include_network_disks" Label="Netzlaufwerke" Color="Color.Primary" />

                            <MudTooltip Text="Überprüft eingebundene Netzwlaufwerke.">
                                <MudIconButton Class="ml-2 mt-0" Icon="@Icons.Material.Filled.Info" Variant="Variant.Text" Size="Size.Small" Color="Color.Default"></MudIconButton>
                            </MudTooltip>
                        </div>

                        <div style="display: flex; align-items: center;">
                            <MudCheckBox T="bool" @bind-Value="@include_removable_disks" Label="Wechseldatenträger" Color="Color.Primary" />

                            <MudTooltip Text="Überprüft eingesteckte Wechseldatenträger.">
                                <MudIconButton Class="ml-2 mt-0" Icon="@Icons.Material.Filled.Info" Variant="Variant.Text" Size="Size.Small" Color="Color.Default"></MudIconButton>
                            </MudTooltip>
                        </div>

                        <div style="display: flex; align-items: center;">
                            <MudNumericField Class="mt-3" @bind-Value="notification_treshold_max" Label="Benachrichtigung ab X Schwellenwert Überschreitungen." Variant="Variant.Text" Min="1" Max="9999" />

                            <MudTooltip Text="Wie viele Schwellenwert Überschreitungen erforderlich sind, bis eine Benachrichtung versendet wird.">
                                <MudIconButton Class="ml-2 mt-5" Icon="@Icons.Material.Filled.Info" Variant="Variant.Text" Size="Size.Small" Color="Color.Default"></MudIconButton>
                            </MudTooltip>
                        </div>

                        <MudText Class="mt-2" Typo="Typo.h6">Aktion</MudText>

                        <MudTextField Label="PowerShell Code" T="string" Lines="15" @bind-Value="@powershell_code" Variant="Variant.Outlined" Required="false" RequiredError="Erforderlich" Immediate="@true" />

                        <div style="display: flex; align-items: center;">
                            <MudNumericField Class="mt-3" @bind-Value="action_treshold_max" Label="Aktion ab X Schwellenwert Überschreitungen." Variant="Variant.Text" Min="1" Max="9999" />

                            <MudTooltip Text="Wie viele aufeinanderfolgende Schwellenwert Überschreitungen erforderlich sind, bis die PowerShell Code Aktion ausgeführt wird.">
                                <MudIconButton Class="ml-2 mt-5" Icon="@Icons.Material.Filled.Info" Variant="Variant.Text" Size="Size.Small" Color="Color.Default"></MudIconButton>
                            </MudTooltip>
                        </div>
                    }
                }
            }
            else if (category == "PowerShell")
            {
                <MudText Class="mt-5" Typo="Typo.h6">Regel</MudText>

                <MudTextField Label="PowerShell Code" T="string" Lines="15" @bind-Value="@powershell_code" Variant="Variant.Outlined" Required="false" RequiredError="Erforderlich" Immediate="@true" />

                <div style="display: flex; align-items: center;">
                    <MudTextField Label="Erwartetes Ergebnis" T="string" @bind-Value="@description" Required="true" RequiredError="Erforderlich" Immediate="@true" />

                    <MudTooltip Text="Regulärer Ausdrücke (Regex) werden unterstützt.">
                        <MudIconButton Class="ml-2 mt-3" Icon="@Icons.Material.Filled.Info" Variant="Variant.Text" Size="Size.Small" Color="Color.Default"></MudIconButton>
                    </MudTooltip>
                </div>

                <div style="display: flex; align-items: center;">
                    <MudNumericField Class="mt-3" @bind-Value="notification_treshold_max" Label="Benachrichtigung ab X Treffer hintereinander." Variant="Variant.Text" Min="1" Max="9999" />

                    <MudTooltip Text="Wie viele aufeinanderfolgende Sensor Anschläge erforderlich sind, bis eine Benachrichtung versendet wird.">
                        <MudIconButton Class="ml-2 mt-5" Icon="@Icons.Material.Filled.Info" Variant="Variant.Text" Size="Size.Small" Color="Color.Default"></MudIconButton>
                    </MudTooltip>
                </div>

                <MudText Class="mt-5" Typo="Typo.h6">Aktion</MudText>

                <MudTextField Label="PowerShell Code" T="string" Lines="15" @bind-Value="@powershell_code" Variant="Variant.Outlined" Required="false" RequiredError="Erforderlich" Immediate="@true" />

                <div style="display: flex; align-items: center;">
                    <MudNumericField Class="mt-3" @bind-Value="action_treshold_max" Label="Aktion ab X Treffer hintereinander." Variant="Variant.Text" Min="1" Max="9999" />

                    <MudTooltip Text="Wie viele aufeinanderfolgende Sensor Anschläge erforderlich sind, bis die PowerShell Code Aktion ausgeführt wird.">
                        <MudIconButton Class="ml-2 mt-5" Icon="@Icons.Material.Filled.Info" Variant="Variant.Text" Size="Size.Small" Color="Color.Default"></MudIconButton>
                    </MudTooltip>
                </div>
            }
            else if (category == "Windows Eventlog")
            {
                <MudText Class="mt-5" Typo="Typo.h6">Regel</MudText>

                <MudSelect Class="mt-3" T="string" @bind-Value="eventlog_category" Label="Eventlog" AnchorOrigin="Origin.BottomCenter">
                    <MudSelectItem Value="@("Anwendung")" />
                    <MudSelectItem Value="@("Sicherheit")" />
                    <MudSelectItem Value="@("Installation")" />
                    <MudSelectItem Value="@("System")" />
                    <MudSelectItem Value="@("Benutzerdefiniert")" />
                </MudSelect>

                if (eventlog_category == "Benutzerdefiniert")
                {
                    <MudTextField Class="mt-3" Label="Eventlog" T="string" @bind-Value="@eventlog" Variant="Variant.Text" Required="true" RequiredError="Erforderlich" Immediate="@true" />
                }

                <div style="display: flex; align-items: center;">
                    <MudTextField Label="Ereignis-ID" T="string" @bind-Value="@eventlog_event_id" Required="true" RequiredError="Erforderlich" Immediate="@true" />
                </div>

                <div style="display: flex; align-items: center;">
                    <MudTextField Label="Erwartetes Ergebnis" T="string" @bind-Value="@expected_result" Required="true" RequiredError="Erforderlich" Immediate="@true" />

                    <MudTooltip Text="Regulärer Ausdrücke (Regex) werden unterstützt. Bleibt das Feld leer, wird nur nach der Ereignis-ID geprüft.">
                        <MudIconButton Class="ml-2 mt-3" Icon="@Icons.Material.Filled.Info" Variant="Variant.Text" Size="Size.Small" Color="Color.Default"></MudIconButton>
                    </MudTooltip>
                </div>

                <div style="display: flex; align-items: center;">
                    <MudNumericField Class="mt-3" @bind-Value="notification_treshold_max" Label="Benachrichtigung ab X Treffer hintereinander." Variant="Variant.Text" Min="1" Max="9999" />

                    <MudTooltip Text="Wie viele aufeinanderfolgende Sensor Anschläge erforderlich sind, bis eine Benachrichtung versendet wird.">
                        <MudIconButton Class="ml-2 mt-5" Icon="@Icons.Material.Filled.Info" Variant="Variant.Text" Size="Size.Small" Color="Color.Default"></MudIconButton>
                    </MudTooltip>
                </div>

                <MudText Class="mt-5" Typo="Typo.h6">Aktion</MudText>

                <MudTextField Label="PowerShell Code" T="string" Lines="15" @bind-Value="@powershell_code" Variant="Variant.Outlined" Required="false" RequiredError="Erforderlich" Immediate="@true" />

                <div style="display: flex; align-items: center;">
                    <MudNumericField Class="mt-3" @bind-Value="action_treshold_max" Label="Aktion ab X Treffer hintereinander." Variant="Variant.Text" Min="1" Max="9999" />

                    <MudTooltip Text="Wie viele aufeinanderfolgende Sensor Anschläge erforderlich sind, bis die PowerShell Code Aktion ausgeführt wird.">
                        <MudIconButton Class="ml-2 mt-5" Icon="@Icons.Material.Filled.Info" Variant="Variant.Text" Size="Size.Small" Color="Color.Default"></MudIconButton>
                    </MudTooltip>
                </div>
            }
            else if (category == "Dienst")
            {
                <MudText Class="mt-5" Typo="Typo.h6">Regel</MudText>

                <MudTextField Class="mt-0" Label="Dienst Name" T="string" @bind-Value="@service_name" Variant="Variant.Text" Required="true" RequiredError="Erforderlich" Immediate="@true" />

                <MudSelect Class="mt-2" T="string" @bind-Value="service_condition" Label="Dienst Status" AnchorOrigin="Origin.BottomCenter">
                    <MudSelectItem Value="@("Ausgeführt")" />
                    <MudSelectItem Value="@("Angehalten")" />
                    <MudSelectItem Value="@("Gestoppt")" />
                </MudSelect>

                <div style="display: flex; align-items: center;">
                    <MudNumericField Class="mt-3" @bind-Value="notification_treshold_max" Label="Benachrichtigung ab X Treffer hintereinander." Variant="Variant.Text" Min="1" Max="9999" />

                    <MudTooltip Text="Wie viele aufeinanderfolgende Sensor Anschläge erforderlich sind, bis eine Benachrichtung versendet wird.">
                        <MudIconButton Class="ml-2 mt-5" Icon="@Icons.Material.Filled.Info" Variant="Variant.Text" Size="Size.Small" Color="Color.Default"></MudIconButton>
                    </MudTooltip>
                </div>

                <MudText Class="mt-5" Typo="Typo.h6">Aktion</MudText>

                <MudSelect Class="mt-0" T="string" @bind-Value="service_action" Label="Dienst Aktion" AnchorOrigin="Origin.BottomCenter">
                    <MudSelectItem Value="@("Starten")" />
                    <MudSelectItem Value="@("Stoppen")" />
                    <MudSelectItem Value="@("Neustarten")" />
                </MudSelect>

                <MudTextField Class="mt-3" Label="PowerShell Code" T="string" Lines="15" @bind-Value="@powershell_code" Variant="Variant.Outlined" Required="false" RequiredError="Erforderlich" Immediate="@true" />

                <div style="display: flex; align-items: center;">
                    <MudNumericField Class="mt-3" @bind-Value="action_treshold_max" Label="Aktion ab X Treffer hintereinander." Variant="Variant.Text" Min="1" Max="9999" />

                    <MudTooltip Text="Wie viele aufeinanderfolgende Sensor Anschläge erforderlich sind, bis die PowerShell Code Aktion ausgeführt wird.">
                        <MudIconButton Class="ml-2 mt-5" Icon="@Icons.Material.Filled.Info" Variant="Variant.Text" Size="Size.Small" Color="Color.Default"></MudIconButton>
                    </MudTooltip>
                </div>
            }
            else if (category == "Ping")
            {
                <MudText Class="mt-5" Typo="Typo.h6">Regel</MudText>

                <MudTextField Class="mt-3" Label="IP-Adresse/Hostname" T="string" @bind-Value="@ping_hostname" Variant="Variant.Text" Required="true" RequiredError="Erforderlich" Immediate="@true" />

                <div style="display: flex; align-items: center;">
                    <MudNumericField Class="mt-3" @bind-Value="notification_treshold_max" Label="Benachrichtigung ab X Fehlschlägen hintereinander." Variant="Variant.Text" Min="1" Max="9999" />

                    <MudTooltip Text="Wie viele aufeinanderfolgende Sensor Anschläge erforderlich sind, bis eine Benachrichtung versendet wird.">
                        <MudIconButton Class="ml-2 mt-5" Icon="@Icons.Material.Filled.Info" Variant="Variant.Text" Size="Size.Small" Color="Color.Default"></MudIconButton>
                    </MudTooltip>
                </div>

                <MudText Class="mt-5" Typo="Typo.h6">Aktion</MudText>

                <MudTextField Label="PowerShell Code" T="string" Lines="15" @bind-Value="@powershell_code" Variant="Variant.Outlined" Required="false" RequiredError="Erforderlich" Immediate="@true" />

                <div style="display: flex; align-items: center;">
                    <MudNumericField Class="mt-3" @bind-Value="action_treshold_max" Label="Aktion ab X Fehlschlägen hintereinander." Variant="Variant.Text" Min="1" Max="9999" />

                    <MudTooltip Text="Wie viele aufeinanderfolgende Sensor Anschläge erforderlich sind, bis die PowerShell Code Aktion ausgeführt wird.">
                        <MudIconButton Class="ml-2 mt-5" Icon="@Icons.Material.Filled.Info" Variant="Variant.Text" Size="Size.Small" Color="Color.Default"></MudIconButton>
                    </MudTooltip>
                </div>
            }

        }

    </DialogContent>
    <DialogActions>
        <MudButton OnClick="Cancel">Abbrechen</MudButton>

        <MudButton Disabled="@Form_Valid()" OnClick="@this.OK" Variant="Variant.Filled" Size="@Size.Small" Color="@Color.Success">Bestätigen</MudButton>
    </DialogActions>
</MudDialog>

@code {

    protected override async Task OnInitializedAsync()
    {

    }

    private string updatedJson = String.Empty;

    private string sensor_name = String.Empty;
    private string description = String.Empty;
    private string severity = "Moderat";
    private string category = "Auslastung";
    private string sub_category = String.Empty;
    private string utilization_category = String.Empty;

    private string powershell_code = "-";
    private string powershell_code_action = "-";
    private int notification_treshold_max = 1;
    private int action_treshold_max = 1;

    //Utilization sensor
    private string disk_category = String.Empty;

    private int cpu_usage = 90;
    private int ram_usage = 90;
    private int disk_usage = 50;
    private int disk_minimum_capacity = 5;
    private string disk_letters = "C";

    private bool include_network_disks = false;
    private bool include_removable_disks = false;

    //Eventlog sensor
    private string eventlog = String.Empty;
    private string eventlog_category = "Anwendung";
    private string eventlog_event_id = String.Empty;
    private string expected_result = String.Empty;

    //service sensor
    private string service_name = String.Empty;
    private string service_condition = "Gestoppt";
    private string service_action = "Starten";

    //ping sensor
    private string ping_hostname = String.Empty;

    //Time scheduler
    private string time_scheduler_type = "Systemstart";
    private int time_scheduler_seconds = 10;
    private int time_scheduler_minutes = 5;
    private int time_scheduler_hours = 1;
    private TimeSpan? time_scheduler_time = new TimeSpan(12, 00, 00);
    private DateTime? time_scheduler_date = DateTime.Now;
    private bool time_scheduler_monday = false;
    private bool time_scheduler_tuesday = false;
    private bool time_scheduler_wednesday = false;
    private bool time_scheduler_thursday = false;
    private bool time_scheduler_friday = false;
    private bool time_scheduler_saturday = false;
    private bool time_scheduler_sunday = false;

    public class Sensor
    {
        public string name { get; set; }
        public string date { get; set; }
        public string author { get; set; }
        public string description { get; set; }
        public int severity { get; set; }
        public int category { get; set; }
        public int sub_category { get; set; }
        public int utilization_category { get; set; }
        public int notification_treshold_max { get; set; }
        public int action_treshold_max { get; set; }
        public string powershell_code { get; set; }
        public string powershell_code_action { get; set; }
        public int cpu_usage { get; set; }
        public int ram_usage { get; set; }
        public int disk_usage { get; set; }
        public int disk_minimum_capacity { get; set; }
        public int disk_category { get; set; }
        public string disk_letters { get; set; }
        public bool include_network_disks { get; set; }
        public bool include_removable_disks { get; set; }
        public string eventlog { get; set; }
        public string eventlog_category { get; set; }
        public string eventlog_event_id { get; set; }
        public string expected_result { get; set; }

        //service sensor
        public string service_name { get; set; }
        public int service_condition { get; set; }
        public int service_action { get; set; }

        //ping sensor
        public string ping_hostname { get; set; }

        //time schedule
        public string time_scheduler_type { get; set; }
        public int time_scheduler_seconds { get; set; }
        public int time_scheduler_minutes { get; set; }
        public int time_scheduler_hours { get; set; }
        public string time_scheduler_time { get; set; }
        public string time_scheduler_date { get; set; }
        public bool time_scheduler_monday { get; set; }
        public bool time_scheduler_tuesday { get; set; }
        public bool time_scheduler_wednesday { get; set; }
        public bool time_scheduler_thursday { get; set; }
        public bool time_scheduler_friday { get; set; }
        public bool time_scheduler_saturday { get; set; }
        public bool time_scheduler_sunday { get; set; }
    }

    [CascadingParameter]
    private MudDialogInstance MudDialog { get; set; } = default!;

    private bool Form_Valid()
    {
        if (time_scheduler_type == "An den folgenden Tagen um X Uhr" || time_scheduler_type == "An den folgenden Tagen, alle X Sekunden" || time_scheduler_type == "An den folgenden Tagen, alle X Minuten" || time_scheduler_type == "An den folgenden Tagen, alle X Stunden")
        {
            if (time_scheduler_monday == false && time_scheduler_tuesday == false && time_scheduler_wednesday == false && time_scheduler_tuesday == false && time_scheduler_friday == false && time_scheduler_saturday == false && time_scheduler_sunday == false)
                return true;
        }

        if (String.IsNullOrEmpty(sensor_name) || String.IsNullOrEmpty(category) || String.IsNullOrEmpty(description))
            return true;
        else
            return false;
    }

    private async Task OK()
    {
        this.Snackbar.Configuration.ShowCloseIcon = true;
        this.Snackbar.Configuration.PositionClass = Defaults.Classes.Position.BottomRight;

        bool success = false;

        MySqlConnection conn = new MySqlConnection(Application_Settings.connectionString);

        try
        {
            int severity_converted = 0;
            int category_converted = 0;
            int sub_category_converted = 0;
            int disk_category_converted = 0;
            int service_condition_converted = 0;
            int service_action_converted = 0;

            //Human readable to computable: severity
            if (severity == "Kritisch")
                severity_converted = 3  ;
            else if (severity == "Hoch")
                severity_converted = 2;    
            else if (severity == "Moderat")
                severity_converted = 1;    
            else if (severity == "Niedrig")
                severity_converted = 0;

            //category
            if (category == "Auslastung")
                category_converted = 0;
            else if (category == "Windows Eventlog")
                category_converted = 1;
            else if (category == "PowerShell")
                category_converted = 2;
            else if (category == "Dienst")
                category_converted = 3;
            else if (category == "Ping")
                category_converted = 4;

            //sub_category
            if (sub_category == "Prozessor")
                sub_category_converted = 0;
            else if (sub_category == "Arbeitsspeicher")
                sub_category_converted = 1;
            else if (sub_category == "Laufwerk")
                sub_category_converted = 2;

            //disk_category
            if (disk_category == "Mehr als X GB belegt")
                disk_category_converted = 0;
            else if (disk_category == "Weniger als X GB frei")
                disk_category_converted = 1;
            else if (disk_category == "Mehr als X Prozent belegt")
                disk_category_converted = 2;
            else if (disk_category == "Weniger als X Prozent frei")
                disk_category_converted = 3;

            //service condition
            if (service_condition == "Ausgeführt")
                service_condition_converted = 0;
            else if (service_condition == "Angehalten")
                service_condition_converted = 1;
            else if (service_condition == "Gestoppt")
                service_condition_converted = 2;

            //service action
            if (service_action == "Starten")
                service_action_converted = 0;
            else if (service_action == "Stoppen")
                service_action_converted = 1;
            else if (service_action == "Neustarten")
                service_action_converted = 2;

            Sensor sensor_json = new Sensor
                {
                    name = sensor_name,
                    date = DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss"),
                    author = "Placeholder",
                    description = description,
                    severity = severity_converted,
                    category = category_converted,
                    sub_category = sub_category_converted,
                    notification_treshold_max = notification_treshold_max,
                    action_treshold_max = action_treshold_max,
                    powershell_code = await Base64.Handler.Encode(powershell_code),
                    powershell_code_action = await Base64.Handler.Encode(powershell_code_action),
                    cpu_usage = cpu_usage,
                    ram_usage = ram_usage,
                    disk_usage = disk_usage,
                    disk_minimum_capacity = disk_minimum_capacity,
                    disk_category = disk_category_converted,
                    disk_letters = disk_letters,
                    include_network_disks = include_network_disks,
                    include_removable_disks = include_removable_disks,
                    eventlog = eventlog,
                    eventlog_category = eventlog_category,
                    eventlog_event_id = eventlog_event_id,
                    expected_result = expected_result,
                    
                    //service sensor
                    service_name = service_name,
                    service_condition = service_condition_converted,
                    service_action = service_action_converted,

                    //ping sensor
                    ping_hostname = ping_hostname,

                    //time schedule
                    time_scheduler_type = time_scheduler_type,
                    time_scheduler_seconds = time_scheduler_seconds,
                    time_scheduler_minutes = time_scheduler_minutes,
                    time_scheduler_hours = time_scheduler_hours,
                    time_scheduler_time = time_scheduler_time.ToString(),
                    time_scheduler_date = time_scheduler_date.ToString(),
                    time_scheduler_monday = time_scheduler_monday,
                    time_scheduler_tuesday = time_scheduler_tuesday,
                    time_scheduler_wednesday = time_scheduler_wednesday,
                    time_scheduler_thursday = time_scheduler_thursday,
                    time_scheduler_friday = time_scheduler_friday,
                    time_scheduler_saturday = time_scheduler_saturday,
                    time_scheduler_sunday = time_scheduler_sunday,
                };

            string sensors_json_string = JsonSerializer.Serialize(sensor_json, new JsonSerializerOptions { WriteIndented = true });

            //Save to MySQL
            await conn.OpenAsync();

            string execute_query = "INSERT INTO `sensors` (`name`, `date`, `author`, `description`, `severity`, `category`, `sub_category`, `json`) VALUES (@name, @date, @author, @description, @severity, @category, @sub_category, @json);";

            MySqlCommand cmd = new MySqlCommand(execute_query, conn);

            cmd.Parameters.AddWithValue("@name", sensor_name);
            cmd.Parameters.AddWithValue("@date", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss"));
            cmd.Parameters.AddWithValue("@author", await localStorage.GetItemAsync<string>("username"));
            cmd.Parameters.AddWithValue("@description", description);
            cmd.Parameters.AddWithValue("@severity", severity_converted);
            cmd.Parameters.AddWithValue("@category", category_converted);
            cmd.Parameters.AddWithValue("@sub_category", sub_category_converted);
            cmd.Parameters.AddWithValue("@json", sensors_json_string);

            cmd.ExecuteNonQuery();

            success = true;
        }
        catch (Exception ex)
        {
            Logging.Handler.Error("/manage_sensors (Add_Sensor_Dialog) -> OK", "Result", ex.Message);
        }
        finally
        {
            await conn.CloseAsync();
        }

        if (success)
        {
            this.MudDialog.Close(DialogResult.Ok("success"));
        }
        else
        {
            this.Snackbar.Add("Es ist ein Fehler aufgetreten.", Severity.Error);
            this.MudDialog.Close(DialogResult.Ok("error"));
        }
    }

    private void Cancel() => MudDialog.Cancel();
}